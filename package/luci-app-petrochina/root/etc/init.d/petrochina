#!/bin/sh /etc/rc.common
# Copyright (C) 2020-2022 Leo Zhao <skygunner5@hotmail.com>
# Licensed to the public under the Apache License 2.0.

START=99
USE_PROCD=1
PROG=/usr/bin/xray
CONFIG=/etc/petrochina/config.json

get_global() {
	config_get_bool enabled $1 enabled '0'
	config_get proxyaddr $1 proxyaddr
	config_get port $1 port
}

get_exception() {
	config_get excPort $1 excPort
	config_get excDomain $1 excDomain
	config_get excIP $1 excIP
	[ -z $excIP ] && excIP='"127.0.0.1"'
	[ -z $excDomain ] && excDomain='""'
	[ -z $excPort ] && excPort=''
}

start_service() {
	ip rule del table 100
	ip route flush table 100
	nft flush table xray >> /dev/null 2>&1
	nft delete table xray >> /dev/null 2>&1
	config_load petrochina
	config_foreach get_global global
	[ $enabled != 1 ] && return 1
	[ -z $proxyaddr ] && return 1
	[ -z $port ] && return 1
	config_foreach get_exception exception
	nft add table xray
	nft -f /etc/petrochina/petrochina.nft || return 1
	lan_ip=$(ip a|grep inet|grep brd|awk '{print $2","}')
	nft add element xray lan { $lan_ip }
	if [ $? -ne 0 ]; 
	then
		nft flush table xray
		nft delete table xray
		return 1
	else
		cat > $CONFIG << EOF
{"log":{"access":"/etc/petrochina/access.log","error":"/etc/petrochina/error.log","loglevel":"none"},"inbounds":[{"tag":"transparent","port":12345,"protocol":"dokodemo-door","settings":{"network":"tcp","followRedirect":true},"sniffing":{"enabled":true,"destOverride":["http","tls"]},"streamSettings":{"sockopt":{"tproxy":"tproxy","mark":255}}}],"outbounds":[{"tag":"proxy","protocol":"http","settings":{"servers":[{"address":"$proxyaddr","port":$port}]},"streamSettings":{"sockopt":{"mark":255}}},{"tag":"direct","protocol":"freedom","streamSettings":{"sockopt":{"mark":255}}}],"routing":{"domainStrategy":"IPIfNonMatch","domainMatcher":"hybrid","rules":[{"type":"field","domain":[$excDomain],"outboundTag":"direct"},{"type":"field","ip":[$excIP],"outboundTag":"direct"},{"type":"field","port":"$excPort","outboundTag":"direct"}]}}
EOF
		ip rule add fwmark 1 table 100
		ip route add local 0.0.0.0/0 dev lo table 100
		procd_open_instance petrochina
		procd_set_param command "$PROG"
		procd_append_param command -config="$CONFIG"
		procd_set_param limits nofile="unlimited"
		procd_set_param stdout 1
		procd_set_param stderr 1
		procd_set_param pidfile /var/run/petrochina
		procd_close_instance
	fi
}

stop_service() {
	output=$(nft list ruleset|grep xray)
	if [ -n "$output" ];
	then
		nft flush table xray
		nft delete table xray
		ip rule del table 100
		ip route flush table 100
	fi
}

service_triggers() {
	procd_add_reload_trigger "petrochina"
}
